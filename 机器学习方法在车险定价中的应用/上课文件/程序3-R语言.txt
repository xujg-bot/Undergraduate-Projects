########################################

getwd()  ##查看工作目录

setwd("E:/vehicleinsurancecourse") ##设置工作目录位置

rm(list = ls()) ##清除内存中所有的变量

Ctrl+l##清屏

set.seed() ##设定种子

#################数据读入######################

cardata=read.csv("car.csv",stringsAsFactors = TRUE)
cardata$clm<-as.factor(cardata$clm)


###########训练集和测试集#################
set.seed(1)
train_index <- sample(67856,47499)
traindata <-cardata[train_index,]
testdata <- cardata[-train_index,]


#################决策树#################
# install.packages("rpart")
library(rpart)

set.seed(123)
#fit <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.0000001, maxdepth = 10))
fit <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata)

tree.pred <- predict(fit,testdata,type="class")

(table <- table(tree.pred,testdata$clm,dnn=c("预测值","真实值")))
(accuracy <- sum(diag(table))/sum(table))
(sensitivity <- table[2,2]/(table[1,2]+table[2,2]))

#install.packages("ROSE")
library(ROSE)

#roc.curve(testdata$clm, tree.pred, plotit = T)

table(traindata$clm)

################ 过采样#####################
traindata_balanced_over <- ovun.sample(clm~veh_value+veh_body+veh_age+gender+area+agecat, data = traindata, method = "over",N=44319*2,seed=1)$data
#table(traindata_balanced_over$clm)

fit_over <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata_balanced_over,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.001, maxdepth = 10))
plotcp(fit_over)

fit_over$cptable
cp_opt <-  fit_over$cptable[which(fit_over$cptable[,"nsplit"]==5),"CP"]
cp_opt

fit_over_best <- prune(fit_over, cp = cp_opt)
op <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
plot(fit_over_best,uniform=TRUE,margin=0.1)
text(fit_best,cex=1.5)
par(op)

tree.pred_over <- predict(fit_over_best,testdata,type="class")

(table <- table(tree.pred_over,testdata$clm,dnn=c("预测值","真实值")))
(accuracy <- sum(diag(table))/sum(table))
(sensitivity <- table[2,2]/(table[1,2]+table[2,2]))

roc.curve(testdata$clm, tree.pred_over, plotit = T)

################ 过采样#####################
traindata_balanced_over <- ovun.sample(clm~veh_value+veh_body+veh_age+gender+area+agecat, data = traindata, method = "over",N=44319*2,seed=1)$data
table(traindata_balanced_over$clm)

fit_over <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata_balanced_over,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.001, maxdepth = 10))
plotcp(fit_over)

fit_over$cptable
(cp_opt <-  fit_over$cptable[which(fit_over$cptable[,"nsplit"]==5),"CP"])
cp_opt

fit_over_best <- prune(fit_over, cp = cp_opt)
op <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
plot(fit_over_best,uniform=TRUE,margin=0.1)
text(fit_over_best,cex=1.5)
par(op)

tree.pred_over <- predict(fit_over_best,testdata,type="class")

(table <- table(tree.pred_over,testdata$clm,dnn=c("预测值","真实值")))
(accuracy <- sum(diag(table))/sum(table))
(sensitivity <- table[2,2]/(table[1,2]+table[2,2]))

roc.curve(testdata$clm, tree.pred_over, plotit = T)

################欠采样#####################
traindata_balanced_under <- ovun.sample(clm~veh_value+veh_body+veh_age+gender+area+agecat, data = traindata, method = "under",N=3180*2,seed=1)$data
table(traindata_balanced_under$clm)

fit_under <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata_balanced_under,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.001, maxdepth = 10))
plotcp(fit_under)

fit_under$cptable
(cp_opt <-  fit_under$cptable[which.min(fit_under$cptable[,"xerror"]),"CP"])
cp_opt

fit_under_best <- prune(fit_under, cp = cp_opt)
op <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
plot(fit_under_best,uniform=TRUE,margin=0.1)
text(fit_under_best,cex=1.5)
par(op)

tree.pred_under <- predict(fit_under_best,testdata,type="class")

(table <- table(tree.pred_under,testdata$clm,dnn=c("预测值","真实值")))
(accuracy <- sum(diag(table))/sum(table))
(sensitivity <- table[2,2]/(table[1,2]+table[2,2]))

roc.curve(testdata$clm, tree.pred_under, plotit = T)

################双采样#####################
traindata_balanced_both <- ovun.sample(clm~veh_value+veh_body+veh_age+gender+area+agecat, data = traindata, method = "both",p=0.5,N=67856,seed=1)$data
table(traindata_balanced_both$clm)

fit_both <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata_balanced_both,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.001, maxdepth = 10))
plotcp(fit_both)

fit_both$cptable
(cp_opt <-  fit_both$cptable[which(fit_both$cptable[,"nsplit"]==3),"CP"])
cp_opt

fit_both_best <- prune(fit_both, cp = cp_opt)
op <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
plot(fit_both_best,uniform=TRUE,margin=0.1)
text(fit_both_best,cex=1.5)
par(op)

tree.pred_both <- predict(fit_both_best,testdata,type="class")

(table <- table(tree.pred_both,testdata$clm,dnn=c("预测值","真实值")))
(accuracy <- sum(diag(table))/sum(table))
(sensitivity <- table[2,2]/(table[1,2]+table[2,2]))

roc.curve(testdata$clm, tree.pred_under, plotit = T)

################人工数据合成法(SMOTE)#####################
traindata_balanced_rose <- ROSE(clm~veh_value+veh_body+veh_age+gender+area+agecat, data = traindata, N=100000, seed=1)$data
table(traindata_balanced_rose$clm)

fit_rose <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata_balanced_rose,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.001, maxdepth = 10))
plotcp(fit_rose)

fit_rose$cptable
(cp_opt <-  fit_rose$cptable[which(fit_rose$cptable[,"nsplit"]==4),"CP"])
cp_opt

fit_rose_best<- prune(fit_rose, cp = cp_opt)
op <- par(no.readonly = TRUE)
par(mar=c(1,1,1,1))
plot(fit_rose_best,uniform=TRUE,margin=0.1)
text(fit_rose_best,cex=1.5)
par(op)

tree.pred_rose <- predict(fit_rose_best,testdata,type="class")

(table <- table(tree.pred_rose,testdata$clm,dnn=c("预测值","真实值")))
(accuracy <- sum(diag(table))/sum(table))
(sensitivity <- table[2,2]/(table[1,2]+table[2,2]))

roc.curve(testdata$clm, tree.pred_under, plotit = T)

################信息熵分裂准则#####################
#fit <- rpart(clm~veh_value+veh_body+veh_age+gender+area+agecat,data=traindata,method="class",control=rpart.control(minsplit = 40, minbucket = 40, cp = 0.001, maxdepth = 10),parms=list(split="information"))
fit <- rpart(y~.,data=bank,subset=train,parms=list(split="information"))